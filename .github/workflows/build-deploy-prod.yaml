name: build and deploy production
env:
  IMAGE_NAME: "auservice-service:latest"

on:
  push:
    branches:
      - master

jobs:
  build-test-jobs:
    runs-on: ubuntu-latest
    name: build & test
    strategy:
      matrix:
        go-version: [1.20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Restore cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - if: steps.cache.outputs.cache-hit != 'true'
        name: Install dependencies
        run: go mod download

      - name: Build with Go
        run: go build -o ./build ./main.go

      - name: Run tests before deploy
        run: go test ./... -json > TestResults-${{ matrix.go-version }}.json

      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json

  docker-jobs:
    runs-on: ubuntu-latest
    name: build & push docker image
    needs: build-test-jobs
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build the Docker image
        run: |
          echo "building image..."
        shell: bash

  deploy-jobs:
    runs-on: ubuntu-latest
    name: deploy to production
    needs: docker-jobs
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to production
        run: |
          echo "deploying to production..."
        shell: bash
